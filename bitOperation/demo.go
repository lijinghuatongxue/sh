package main

import "fmt"

func main() {
	// & 与运算
	var a int
	a = 68      // 64 32 16 8 4 2 1 (64 + 4 = 68 | Binary -> 1000100)
	c := a & 67 // 64 + 2 + 1 = 67 | Binary -> 1000011
	// 1000100
	// 1000011
	// 1000000
	// 1   0  0  0  0 0 0
	// 64 32 16 8 4 2 1
	// 64
	fmt.Println("& 与运算 -> ", c) // 64

	// ｜ 或运算
	var b int
	b = 68     // 64 32 16 8 4 2 1 (64 + 4 = 68 | Binary -> 1000100)
	c = b | 67 // 64 + 2 + 1 = 67 | Binary -> 1000011
	// 1000100
	// 1000011
	// 1000111
	// 64 32 16 8 4 2 1
	// 1  0  0  0 1 1 1
	//64 + 4 + 2 + 1 = 71

	fmt.Println("| 或运算 -> ", c)

	// ^ 异或运算
	var d int
	d = 67     // 64 + 2 + 1 = 67 | Binary -> 1000011
	d = d ^ 68 // 64 32 16 8 4 2 1 (64 + 4 = 68 | Binary -> 1000100)
	// 64 32 16 8 4 2 1
	// 1000011
	// 1000100
	// 0000111
	// 4 + 2 + 1 = 7
	fmt.Println("^ 异或运算 -> ", d)

	// ~ 取反运算
	// todo 待理解
	var e = 69
	// 64 (3) 4 (1) 1
	// 1000101
	// 0111010
	// 64 32 16 8 4 2 1
	// 32 + 16 + 8 + 2 = 58

	fmt.Println("~ 取反运算 -> ", ^uint8(e))

	//

}
